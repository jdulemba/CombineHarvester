MapCouplingFromWidth.py:
-Example
> python MapCouplingFromWidth.py SusHi_width_xs_A.root --masses 400,500,600,750 --widths 1,2.5,5 --higgs A
> python MapCouplingFromWidth.py SusHi_width_xs_H.root --masses 400,500,600,750 --widths 1,2.5,5 --higgs H
-Usage: It maps the value of coupling from a given width in pc for a fixed mass. The values are taken from the SusHi results. You can generate your own SusHi results using MakeSusHi.py

morph_width_extrapolate.py:
-Example
> python morph_width_extrapolate.py templates_ALL_2017Jul25.root
> python morph_width_extrapolate.py templates_ALL_2017Jul25.root --width 1 --refwidth 2.5 --sgnfactor 2.524551213 --intfactor 1.
-Usage: It morphs a certain width for the signal and interference shapes that is not in the range of available widths, i.e. outside 2.5 and 50 pc. The arguments "sgnfactor" and "intfactor" specify the factor by which the morphed width is scaled from the reference width "refwidth" for signal and interference shapes respectively. These factors can be estimated using MG LO generator

ScaleAllShapes.py:
-Example
> python ScaleAllShapes.py --factor 27.855
-Usage: It scales all shapes, including signal, interference and background, by the input factor

ScaleSgnIntShapes.py:
-Example
> python ScaleSgnIntShapes templates_ALL_2017Jul25_extrapolated_morphed.root
> python ScaleSgnIntShapes templates_ALL_2017Jul25_extrapolated_morphed.root --sgnfactor 400:2.84E+00,450:2.47E+00,500:2.27E+00,550:2.13E+00,600:2.03E+00,650:1.95E+00,700:1.89E+00,750:1.83E+00 --intfactor 400:2.243323698,450:2.089229843,500:2.002623867,550:1.942805476,600:1.895686751,650:1.856694249,700:1.829439044,750:1.801913174
-Usage: It scales the signal and interference shapes by the corresponding K-factor. The arguments "sgnfactor" and "intfactor" specify the signal and interference K-factors respectively. Different K-factors can be used for different masses by writing in the form Mass:KFACTOR